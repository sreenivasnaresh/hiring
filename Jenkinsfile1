pipeline {
    agent none
    stages {
        stage('Check Agent Status') {
            steps {
                script {
                    def agentName = 'linux-slave-1' // Replace with the name of your slave node
                    def agentOnline = isAgentOnline(agentName)
                    
                    if (agentOnline) {
                        node('Linux1') {
                            // Run on the slave if it's online
                            sh "docker build . -t vsnaresh/web:1.0.9" // Replace with your build steps
                        }
                    } else {
                        // Run on the master if the slave is offline
                        node('Jenkins') {
                            sh "docker build . -t vsnaresh/web:1.0.9" // Replace with your build steps
                        }
                    }
                }
            }
        }
        stage('Docker Push') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-crede', passwordVariable: 'dhubPwd', usernameVariable: 'dhubUser')]) {
                    sh "docker login -u ${dhubUser} -p ${dhubPwd}"
                    sh "docker push vsnaresh/web:1.0.9"
                }
            }
        }
        stage('Docker Deploy') {
            steps {
                sshagent(['docker-login']) {
                    sh "ssh -o StrictHostKeyChecking=no  ec2-user@172.31.8.121 docker rm -f hiring"
                    sh "ssh  ec2-user@172.31.8.121 docker run -d -p 8090:8080 --name hiring vsnaresh/web:1.0.9"
                }
                
            }
        }
    }
}

def isAgentOnline(agentName) {
    def node = Jenkins.instance.getNode(agentName)
    return node != null && node.toComputer().online
}
